name: Barrier Release Build (macOS)

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up environment
      run: |
        echo "TERM=xterm-256color" >> $GITHUB_ENV
        echo "B_BUILD_TYPE=Release" >> $GITHUB_ENV
        echo "BARRIER_BUILD_INSTALLER=ON" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        brew update
        brew install qt@5 cmake create-dmg
        brew link --force qt@5

    - name: Set release version
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        
    - name: Build Barrier with Bundle
      run: |
        set -e
        set -x
        ./clean_build.sh
        # Explicitly build the macOS bundle target
        cd build
        make Barrier_MacOS

    - name: Verify bundle creation
      run: |
        echo "=== Looking for bundle directory ==="
        find . -name "bundle" -type d
        echo "=== Looking for Barrier.app ==="
        find . -name "Barrier.app" -type d
        echo "=== Bundle contents ==="
        if [ -d "build/bundle/Barrier.app" ]; then
          ls -la build/bundle/Barrier.app/
          ls -la build/bundle/Barrier.app/Contents/
          ls -la build/bundle/Barrier.app/Contents/MacOS/ || true
          echo "=== Binary sizes ==="
          du -h build/bundle/Barrier.app/Contents/MacOS/* || true
        fi

    - name: Package as DMG
      run: |
        if [ ! -d "build/bundle/Barrier.app" ]; then
          echo "Error: Barrier.app bundle not found!"
          exit 1
        fi
        
        mkdir -p dist
        create-dmg \
          --volname "Barrier ${{ env.RELEASE_VERSION }}" \
          --window-pos 200 120 \
          --window-size 800 400 \
          --icon-size 100 \
          --app-drop-link 600 185 \
          "dist/barrier-macos-${{ env.RELEASE_VERSION }}.dmg" \
          "build/bundle/Barrier.app"

    - name: Upload DMG as artifact
      uses: actions/upload-artifact@v4
      with:
        name: barrier-macos-dmg
        path: dist/barrier-macos-*.dmg

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: dist/barrier-macos-*.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
