name: Barrier Release Build (macOS)

on:
  push:
    tags:
      - 'v*.*.*'    # Trigger on tags like v2.4.0
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive  # Important for Barrier's dependencies

    - name: Set up environment
      run: |
        # Fix tput issues by setting TERM
        echo "TERM=xterm-256color" >> $GITHUB_ENV
        echo "B_BUILD_TYPE=Release" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        brew update
        brew install qt@5 cmake create-dmg
        brew link --force qt@5

    - name: Set release version
      id: vars
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        
    - name: Build Barrier
      run: |
        set -e  # Exit on any error
        set -x  # Show commands being executed
        ./clean_build.sh

    - name: Debug build output
      if: always()
      run: |
        echo "=== Build directory contents ==="
        find build -type f -name "*.app" -o -name "*.dmg" 2>/dev/null || true
        echo "=== Looking for Barrier.app ==="
        find . -name "Barrier.app" -type d 2>/dev/null || true
        echo "=== Build bin directory ==="
        ls -la build/bin/ 2>/dev/null || echo "build/bin not found"

    - name: Package as DMG
      run: |
        # Find the actual Barrier.app location
        APP_PATH=$(find . -name "Barrier.app" -type d | head -n 1)
        if [ -z "$APP_PATH" ]; then
          echo "Error: Barrier.app not found!"
          exit 1
        fi
        echo "Found Barrier.app at: $APP_PATH"
        
        mkdir -p dist
        create-dmg \
          --volname "Barrier" \
          --window-pos 200 120 \
          --window-size 800 400 \
          --icon-size 100 \
          --app-drop-link 600 185 \
          "dist/barrier-macos-${{ env.RELEASE_VERSION }}.dmg" \
          "$APP_PATH"

    - name: Upload DMG as artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: barrier-macos-dmg
        path: /Users/runner/work/barrier/barrier/master.dmg

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: dist/barrier-macos-*.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
